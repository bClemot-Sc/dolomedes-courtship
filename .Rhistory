path_g1 <- "data_scoring/unmated"
path_g2 <- "data_scoring/mated"
data_g1 <- map_dfr(files_g1, read_behavior_data, group = "unmated", path = path_g1)
read_behavior_data <- function(file_name, group, path) {
read_csv(
file.path(path, paste0(file_name, ".csv")),
show_col_types = FALSE,
name_repair = "minimal"
) %>%
select(-1) %>%
mutate(
File = file_name,
Group = group,
Duration = as.numeric(Duration)
) %>%
filter(!is.na(Duration))
}
# Packages
library(dplyr)
library(readr)
library(purrr)
library(stringr)
files_g1 <- c(
"Aggregated_G26xJ203", "Aggregated_G30xJ210", "Aggregated_H30xH71",
"Aggregated_H45xH65", "Aggregated_H62xJ132", "Aggregated_J101xJ204",
"Aggregated_J102xJ206", "Aggregated_J110xH67", "Aggregated_J124xG42",
"Aggregated_J144xG39", "Aggregated_J183xH26", "Aggregated_J189xJ112",
"Aggregated_J190xJ42", "Aggregated_J191xJ68", "Aggregated_J201xG43"
)
files_g2 <- c(
"Aggregated_G30xH52", "Aggregated_H30xG38", "Aggregated_H62xG33",
"Aggregated_J101xH76", "Aggregated_J102xJ161", "Aggregated_J110xJ140",
"Aggregated_J124xG32", "Aggregated_J144xG38", "Aggregated_J183xG35",
"Aggregated_J190xJ212"
)
path_g1 <- "data_scoring/unmated"
path_g2 <- "data_scoring/mated"
data_g1 <- map_dfr(files_g1, read_behavior_data, group = "unmated", path = path_g1)
data_g2 <- map_dfr(files_g2, read_behavior_data, group = "mated", path = path_g2)
full_data <- bind_rows(data_g1, data_g2)
behaviour_summary <- full_data %>%
group_by(Group, File, Behaviour) %>%
summarise(TotalBehaviourTime = sum(Duration), .groups = "drop") %>%
left_join(
full_data %>%
group_by(Group, File) %>%
summarise(TotalTime = sum(Duration), .groups = "drop"),
by = c("Group", "File")
) %>%
mutate(TimeFrequency = TotalBehaviourTime / TotalTime)
View(behaviour_summary)
behaviour_stats <- behaviour_summary %>%
group_by(Group, Behaviour) %>%
summarise(
MeanTimeFreq = mean(TimeFrequency),
SETimeFreq = sd(TimeFrequency) / sqrt(n()),
.groups = "drop"
)
View(behaviour_stats)
View(behaviour_stats)
behaviour_stats$MeanPer <- behaviour_stats$MeanTimeFreq*100
View(behaviour_stats)
sum(behaviour_stats$MeanPer)
setwd("~/Documents/GitHub/Dolomedes_Courtship/Final paper")
#### Packages ####
## Packages
library(tidyverse)
## Data, import aggregated behaviours (see script for data formatting)
ag.g1.G26xJ203 <- read.csv("Aggregated_G26xJ203.csv")
ag.g1.G30xJ210 <- read.csv("Aggregated_G30xJ210.csv")
ag.g1.H30xH71 <- read.csv("Aggregated_H30xH71.csv")
ag.g1.H45xH65 <- read.csv("Aggregated_H45xH65.csv")
ag.g1.H62xJ132 <- read.csv("Aggregated_H62xJ132.csv")
ag.g1.J101xJ204 <- read.csv("Aggregated_J101xJ204.csv")
ag.g1.J102xJ206 <- read.csv("Aggregated_J102xJ206.csv")
ag.g1.J110xH67 <- read.csv("Aggregated_J110xH67.csv")
ag.g1.J124xG42 <- read.csv("Aggregated_J124xG42.csv")
ag.g1.J144xG39 <- read.csv("Aggregated_J144xG39.csv")
ag.g1.J183xH26 <- read.csv("Aggregated_J183xH26.csv")
ag.g1.J189xJ11 <- read.csv("Aggregated_J189xJ112.csv")
ag.g1.J190xJ42 <- read.csv("Aggregated_J190xJ42.csv")
ag.g1.J191xJ68 <- read.csv("Aggregated_J191xJ68.csv")
ag.g1.J201xG43 <- read.csv("Aggregated_J201xG43.csv")
ag.g2.G30xH52 <- read.csv("Aggregated_G30xH52.csv")
ag.g2.H30xG38 <- read.csv("Aggregated_H30xG38.csv")
ag.g2.H62xG33 <- read.csv("Aggregated_H62xG33.csv")
ag.g2.J101xH76 <- read.csv("Aggregated_J101xH76.csv")
ag.g2.J102xJ161 <- read.csv("Aggregated_J102xJ161.csv")
ag.g2.J110xJ140 <- read.csv("Aggregated_J110xJ140.csv")
ag.g2.J124xG32 <- read.csv("Aggregated_J124xG32.csv")
ag.g2.J144xG38 <- read.csv("Aggregated_J144xG38.csv")
ag.g2.J183xG35 <- read.csv("Aggregated_J183xG35.csv")
ag.g2.J190xJ212 <- read.csv("Aggregated_J190xJ212.csv")
#### Comparison of behaviour frequencies ####
## Obtain total time for each behaviour of each trial
time.prop.g1.G26xJ203 <- ag.g1.G26xJ203 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.G30xJ210 <- ag.g1.G30xJ210 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H30xH71 <- ag.g1.H30xH71 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H45xH65 <- ag.g1.H45xH65 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H62xJ132 <- ag.g1.H62xJ132 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J101xJ204 <- ag.g1.J101xJ204 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J102xJ206 <- ag.g1.J102xJ206 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J110xH67 <- ag.g1.J110xH67 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J124xG42 <- ag.g1.J124xG42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J144xG39 <- ag.g1.J144xG39 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J183xH26 <- ag.g1.J183xH26 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J189xJ112 <- ag.g1.J189xJ112 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J190xJ42 <- ag.g1.J190xJ42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J191xJ68 <- ag.g1.J191xJ68 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J201xG43 <- ag.g1.J201xG43 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.G30xH52 <- ag.g2.G30xH52 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.H30xG38 <- ag.g2.H30xG38 %>% group_by(Behaviour) %>%summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.H62xG33 <- ag.g2.H62xG33 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J101xH76 <- ag.g2.J101xH76 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J102xJ161 <- ag.g2.J102xJ161 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J110xJ140 <- ag.g2.J110xJ140 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J124xG32 <- ag.g2.J124xG32 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J144xG38 <- ag.g2.J144xG38 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J183xG35 <- ag.g2.J183xG35 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.J190xJ212 <- ag.g2.J190xJ212 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
## Obtain time frequency of each behaviour by dividing by the sum
time.prop.g1.G26xJ203$time.prop <- time.prop.g1.G26xJ203$time.prop / sum(time.prop.g1.G26xJ203$time.prop)
time.prop.g1.G30xJ210$time.prop <- time.prop.g1.G30xJ210$time.prop / sum(time.prop.g1.G30xJ210$time.prop)
time.prop.g1.H30xH71$time.prop <- time.prop.g1.H30xH71$time.prop / sum(time.prop.g1.H30xH71$time.prop)
time.prop.g1.H45xH65$time.prop <- time.prop.g1.H45xH65$time.prop / sum(time.prop.g1.H45xH65$time.prop)
time.prop.g1.H62xJ132$time.prop <- time.prop.g1.H62xJ132$time.prop / sum(time.prop.g1.H62xJ132$time.prop)
time.prop.g1.J101xJ204$time.prop <- time.prop.g1.J101xJ204$time.prop / sum(time.prop.g1.J101xJ204$time.prop)
time.prop.g1.J102xJ206$time.prop <- time.prop.g1.J102xJ206$time.prop / sum(time.prop.g1.J102xJ206$time.prop)
time.prop.g1.J110xH67$time.prop <- time.prop.g1.J110xH67$time.prop / sum(time.prop.g1.J110xH67$time.prop)
time.prop.g1.J124xG42$time.prop <- time.prop.g1.J124xG42$time.prop / sum(time.prop.g1.J124xG42$time.prop)
time.prop.g1.J144xG39$time.prop <- time.prop.g1.J144xG39$time.prop / sum(time.prop.g1.J144xG39$time.prop)
time.prop.g1.J183xH26$time.prop <- time.prop.g1.J183xH26$time.prop / sum(time.prop.g1.J183xH26$time.prop)
time.prop.g1.J189xJ112$time.prop <- time.prop.g1.J189xJ112$time.prop / sum(time.prop.g1.J189xJ112$time.prop)
time.prop.g1.J190xJ42$time.prop <- time.prop.g1.J190xJ42$time.prop / sum(time.prop.g1.J190xJ42$time.prop)
time.prop.g1.J191xJ68$time.prop <- time.prop.g1.J191xJ68$time.prop / sum(time.prop.g1.J191xJ68$time.prop)
time.prop.g1.J201xG43$time.prop <- time.prop.g1.J201xG43$time.prop / sum(time.prop.g1.J201xG43$time.prop)
time.prop.g2.G30xH52$time.prop <- time.prop.g2.G30xH52$time.prop / sum(time.prop.g2.G30xH52$time.prop)
time.prop.g2.H30xG38$time.prop <- time.prop.g2.H30xG38$time.prop / sum(time.prop.g2.H30xG38$time.prop)
time.prop.g2.H62xG33$time.prop <- time.prop.g2.H62xG33$time.prop / sum(time.prop.g2.H62xG33$time.prop)
time.prop.g2.J101xH76$time.prop <- time.prop.g2.J101xH76$time.prop / sum(time.prop.g2.J101xH76$time.prop)
time.prop.g2.J102xJ161$time.prop <- time.prop.g2.J102xJ161$time.prop / sum(time.prop.g2.J102xJ161$time.prop)
time.prop.g2.J110xJ140$time.prop <- time.prop.g2.J110xJ140$time.prop / sum(time.prop.g2.J110xJ140$time.prop)
time.prop.g2.J124xG32$time.prop <- time.prop.g2.J124xG32$time.prop / sum(time.prop.g2.J124xG32$time.prop)
time.prop.g2.J144xG38$time.prop <- time.prop.g2.J144xG38$time.prop / sum(time.prop.g2.J144xG38$time.prop)
time.prop.g2.J183xG35$time.prop <- time.prop.g2.J183xG35$time.prop / sum(time.prop.g2.J183xG35$time.prop)
time.prop.g2.J190xJ212$time.prop <- time.prop.g2.J190xJ212$time.prop / sum(time.prop.g2.J190xJ212$time.prop)
## Group everything
# Group1
time.prop.group1 <-
bind_rows(
time.prop.g1.G26xJ203,
time.prop.g1.G30xJ210,
time.prop.g1.H30xH71,
time.prop.g1.H45xH65,
time.prop.g1.H62xJ132,
time.prop.g1.J101xJ204,
time.prop.g1.J102xJ206,
time.prop.g1.J110xH67,
time.prop.g1.J124xG42,
time.prop.g1.J144xG39,
time.prop.g1.J183xH26,
time.prop.g1.J189xJ112,
time.prop.g1.J190xJ42,
time.prop.g1.J191xJ68,
time.prop.g1.J201xG43
)
# Group2
time.prop.group2 <-
bind_rows(
time.prop.g2.G30xH52,
time.prop.g2.H30xG38,
time.prop.g2.H62xG33,
time.prop.g2.J101xH76,
time.prop.g2.J102xJ161,
time.prop.g2.J110xJ140,
time.prop.g2.J124xG32,
time.prop.g2.J144xG38,
time.prop.g2.J183xG35,
time.prop.g2.J190xJ212
)
## Change ID for only female ID
time.prop.group1$ID.fem <- substr(time.prop.group1$ID,4,7)
time.prop.group1 <- time.prop.group1[,-3]
colnames(time.prop.group1) <- c("Behaviour1","time.prop1","ID.fem")
time.prop.group2$ID.fem <- substr(time.prop.group2$ID,4,7)
time.prop.group2 <- time.prop.group2[,-3]
colnames(time.prop.group2) <- c("Behaviour2","time.prop2","ID.fem")
## Sort by behaviours
LS1 <- filter(time.prop.group1, Behaviour1 == "Leg Showcase")
LS2 <- filter(time.prop.group2, Behaviour2 == "Leg Showcase")
LS.PS1 <- filter(time.prop.group1, Behaviour1 == "Leg Showcase + Pedipalp Showcase")
LS.PS2 <- filter(time.prop.group2, Behaviour2 == "Leg Showcase + Pedipalp Showcase")
Fr1 <- filter(time.prop.group1, Behaviour1 == "Freezing")
Fr2 <- filter(time.prop.group2, Behaviour2 == "Freezing")
LS.M1 <- filter(time.prop.group1, Behaviour1 == "Leg Showcase + Mounted")
LS.M2 <- filter(time.prop.group2, Behaviour2 == "Leg Showcase + Mounted")
M.F1 <- filter(time.prop.group1, Behaviour1 == "Mounted + Freezing")
M.F2 <- filter(time.prop.group2, Behaviour2 == "Mounted + Freezing")
LS.M.PS1 <- filter(time.prop.group1, Behaviour1 == "Leg Showcase + Mounted + Pedipalp Showcase")
LS.M.PS2 <- filter(time.prop.group2, Behaviour2 == "Leg Showcase + Mounted + Pedipalp Showcase")
M.PS1 <- filter(time.prop.group1, Behaviour1 == "Mounted + Pedipalp Showcase")
M.PS2 <- filter(time.prop.group2, Behaviour2 == "Mounted + Pedipalp Showcase")
PS1 <- filter(time.prop.group1, Behaviour1 == "Pedipalp Showcase")
PS2 <- filter(time.prop.group2, Behaviour2 == "Pedipalp Showcase")
R1 <- filter(time.prop.group1, Behaviour1 == "Retreat")
R2 <- filter(time.prop.group2, Behaviour2 == "Retreat")
G1 <- filter(time.prop.group1, Behaviour1 == "Grooming")
G2 <- filter(time.prop.group2, Behaviour2 == "Grooming")
G.LS1 <- filter(time.prop.group1, Behaviour1 == "Grooming + Leg Showcase")
G.LS2 <- filter(time.prop.group2, Behaviour2 == "Grooming + Leg Showcase")
# Create the empty DF:
empty.df1 <- as.data.frame(matrix(NA,nrow=15,ncol=3))
colnames(empty.df1) <- colnames(LS1)
empty.df1$ID.fem <- LS1$ID.fem
empty.df2 <- as.data.frame(matrix(NA,nrow=15,ncol=3))
colnames(empty.df2) <- colnames(LS2)
empty.df2$ID.fem <- LS1$ID.fem
# Merge1
LS1 <- natural_join(LS1,empty.df1,by="ID.fem",jointype="FULL")
LS.PS1 <- natural_join(LS.PS1,empty.df1,by="ID.fem",jointype="FULL")
Fr1 <- natural_join(Fr1,empty.df1,by="ID.fem",jointype="FULL")
LS.M1 <- natural_join(LS.M1,empty.df1,by="ID.fem",jointype="FULL")
M.F1 <- natural_join(M.F1,empty.df1,by="ID.fem",jointype="FULL")
LS.M.PS1 <- natural_join(LS.M.PS1,empty.df1,by="ID.fem",jointype="FULL")
M.PS1 <- natural_join(LS1,empty.df1,by="ID.fem",jointype="FULL")
PS1 <- natural_join(PS1,empty.df1,by="ID.fem",jointype="FULL")
R1 <- natural_join(R1,empty.df1,by="ID.fem",jointype="FULL")
G1 <- natural_join(G1,empty.df1,by="ID.fem",jointype="FULL")
G.LS1 <- natural_join(G.LS1,empty.df1,by="ID.fem",jointype="FULL")
# Merge2
LS2 <- natural_join(LS2,empty.df2,by="ID.fem",jointype="FULL")
LS.PS2 <- natural_join(LS.PS2,empty.df2,by="ID.fem",jointype="FULL")
Fr2 <- natural_join(Fr2,empty.df2,by="ID.fem",jointype="FULL")
LS.M2 <- natural_join(LS.M2,empty.df2,by="ID.fem",jointype="FULL")
M.F2 <- natural_join(M.F2,empty.df2,by="ID.fem",jointype="FULL")
#### Packages ####
## Packages
library(tidyverse)
## Data, import aggregated behaviours (see script for data formatting)
ag.g1.G26xJ203 <- read.csv("Aggregated_G26xJ203.csv")
ag.g1.G30xJ210 <- read.csv("Aggregated_G30xJ210.csv")
ag.g1.H30xH71 <- read.csv("Aggregated_H30xH71.csv")
ag.g1.H45xH65 <- read.csv("Aggregated_H45xH65.csv")
ag.g1.H62xJ132 <- read.csv("Aggregated_H62xJ132.csv")
ag.g1.J101xJ204 <- read.csv("Aggregated_J101xJ204.csv")
ag.g1.J102xJ206 <- read.csv("Aggregated_J102xJ206.csv")
ag.g1.J110xH67 <- read.csv("Aggregated_J110xH67.csv")
ag.g1.J124xG42 <- read.csv("Aggregated_J124xG42.csv")
ag.g1.J144xG39 <- read.csv("Aggregated_J144xG39.csv")
ag.g1.J183xH26 <- read.csv("Aggregated_J183xH26.csv")
ag.g1.J189xJ11 <- read.csv("Aggregated_J189xJ112.csv")
ag.g1.J190xJ42 <- read.csv("Aggregated_J190xJ42.csv")
ag.g1.J191xJ68 <- read.csv("Aggregated_J191xJ68.csv")
ag.g1.J201xG43 <- read.csv("Aggregated_J201xG43.csv")
ag.g2.G30xH52 <- read.csv("Aggregated_G30xH52.csv")
ag.g2.H30xG38 <- read.csv("Aggregated_H30xG38.csv")
ag.g2.H62xG33 <- read.csv("Aggregated_H62xG33.csv")
ag.g2.J101xH76 <- read.csv("Aggregated_J101xH76.csv")
ag.g2.J102xJ161 <- read.csv("Aggregated_J102xJ161.csv")
ag.g2.J110xJ140 <- read.csv("Aggregated_J110xJ140.csv")
ag.g2.J124xG32 <- read.csv("Aggregated_J124xG32.csv")
ag.g2.J144xG38 <- read.csv("Aggregated_J144xG38.csv")
ag.g2.J183xG35 <- read.csv("Aggregated_J183xG35.csv")
ag.g2.J190xJ212 <- read.csv("Aggregated_J190xJ212.csv")
#### Comparison of behaviour frequencies ####
## Obtain total time for each behaviour of each trial
time.prop.g1.G26xJ203 <- ag.g1.G26xJ203 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.G30xJ210 <- ag.g1.G30xJ210 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H30xH71 <- ag.g1.H30xH71 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H45xH65 <- ag.g1.H45xH65 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H62xJ132 <- ag.g1.H62xJ132 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J101xJ204 <- ag.g1.J101xJ204 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J102xJ206 <- ag.g1.J102xJ206 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J110xH67 <- ag.g1.J110xH67 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J124xG42 <- ag.g1.J124xG42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J144xG39 <- ag.g1.J144xG39 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J183xH26 <- ag.g1.J183xH26 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J189xJ112 <- ag.g1.J189xJ112 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J190xJ42 <- ag.g1.J190xJ42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J191xJ68 <- ag.g1.J191xJ68 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J201xG43 <- ag.g1.J201xG43 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g2.G30xH52 <- ag.g2.G30xH52 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
#### Packages ####
## Packages
library(tidyverse)
## Data, import aggregated behaviours (see script for data formatting)
ag.g1.G26xJ203 <- read.csv("Aggregated_G26xJ203.csv")
ag.g1.G30xJ210 <- read.csv("Aggregated_G30xJ210.csv")
ag.g1.H30xH71 <- read.csv("Aggregated_H30xH71.csv")
ag.g1.H45xH65 <- read.csv("Aggregated_H45xH65.csv")
ag.g1.H62xJ132 <- read.csv("Aggregated_H62xJ132.csv")
ag.g1.J101xJ204 <- read.csv("Aggregated_J101xJ204.csv")
ag.g1.J102xJ206 <- read.csv("Aggregated_J102xJ206.csv")
ag.g1.J110xH67 <- read.csv("Aggregated_J110xH67.csv")
ag.g1.J124xG42 <- read.csv("Aggregated_J124xG42.csv")
ag.g1.J144xG39 <- read.csv("Aggregated_J144xG39.csv")
ag.g1.J183xH26 <- read.csv("Aggregated_J183xH26.csv")
ag.g1.J189xJ11 <- read.csv("Aggregated_J189xJ112.csv")
ag.g1.J190xJ42 <- read.csv("Aggregated_J190xJ42.csv")
ag.g1.J191xJ68 <- read.csv("Aggregated_J191xJ68.csv")
ag.g1.J201xG43 <- read.csv("Aggregated_J201xG43.csv")
ag.g2.G30xH52 <- read.csv("Aggregated_G30xH52.csv")
ag.g2.H30xG38 <- read.csv("Aggregated_H30xG38.csv")
ag.g2.H62xG33 <- read.csv("Aggregated_H62xG33.csv")
ag.g2.J101xH76 <- read.csv("Aggregated_J101xH76.csv")
ag.g2.J102xJ161 <- read.csv("Aggregated_J102xJ161.csv")
ag.g2.J110xJ140 <- read.csv("Aggregated_J110xJ140.csv")
ag.g2.J124xG32 <- read.csv("Aggregated_J124xG32.csv")
ag.g2.J144xG38 <- read.csv("Aggregated_J144xG38.csv")
ag.g2.J183xG35 <- read.csv("Aggregated_J183xG35.csv")
ag.g2.J190xJ212 <- read.csv("Aggregated_J190xJ212.csv")
#### Comparison of behaviour frequencies ####
## Obtain total time for each behaviour of each trial
time.prop.g1.G26xJ203 <- ag.g1.G26xJ203 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.G30xJ210 <- ag.g1.G30xJ210 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H30xH71 <- ag.g1.H30xH71 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H45xH65 <- ag.g1.H45xH65 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.H62xJ132 <- ag.g1.H62xJ132 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J101xJ204 <- ag.g1.J101xJ204 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J102xJ206 <- ag.g1.J102xJ206 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J110xH67 <- ag.g1.J110xH67 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J124xG42 <- ag.g1.J124xG42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J144xG39 <- ag.g1.J144xG39 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J183xH26 <- ag.g1.J183xH26 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J189xJ112 <- ag.g1.J189xJ112 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
time.prop.g1.J190xJ42 <- ag.g1.J190xJ42 %>% group_by(Behaviour) %>% summarise(time.prop = sum(Duration),ID = unique(ID))
read_behavior_data <- function(file_name, group, path) {
read_csv(
file.path(path, paste0(file_name, ".csv")),
show_col_types = FALSE,
name_repair = "minimal"
) %>%
select(-1) %>%
mutate(
File = file_name,
Group = group,
Duration = as.numeric(Duration)
) %>%
filter(!is.na(Duration))
}
# Packages
library(dplyr)
library(readr)
library(purrr)
library(stringr)
files_g1 <- c(
"Aggregated_G26xJ203", "Aggregated_G30xJ210", "Aggregated_H30xH71",
"Aggregated_H45xH65", "Aggregated_H62xJ132", "Aggregated_J101xJ204",
"Aggregated_J102xJ206", "Aggregated_J110xH67", "Aggregated_J124xG42",
"Aggregated_J144xG39", "Aggregated_J183xH26", "Aggregated_J189xJ112",
"Aggregated_J190xJ42", "Aggregated_J191xJ68", "Aggregated_J201xG43"
)
files_g2 <- c(
"Aggregated_G30xH52", "Aggregated_H30xG38", "Aggregated_H62xG33",
"Aggregated_J101xH76", "Aggregated_J102xJ161", "Aggregated_J110xJ140",
"Aggregated_J124xG32", "Aggregated_J144xG38", "Aggregated_J183xG35",
"Aggregated_J190xJ212"
)
path_g1 <- "data_scoring/unmated"
path_g2 <- "data_scoring/mated"
data_g1 <- map_dfr(files_g1, read_behavior_data, group = "unmated", path = path_g1)
data_g2 <- map_dfr(files_g2, read_behavior_data, group = "mated", path = path_g2)
full_data <- bind_rows(data_g1, data_g2)
behaviour_summary <- full_data %>%
group_by(Group, File, Behaviour) %>%
summarise(TotalBehaviourTime = sum(Duration), .groups = "drop") %>%
left_join(
full_data %>%
group_by(Group, File) %>%
summarise(TotalTime = sum(Duration), .groups = "drop"),
by = c("Group", "File")
) %>%
mutate(TimeFrequency = TotalBehaviourTime / TotalTime)
behaviour_stats <- behaviour_summary %>%
group_by(Group, Behaviour) %>%
summarise(
MeanTimeFreq = mean(TimeFrequency),
SETimeFreq = sd(TimeFrequency) / sqrt(n()),
.groups = "drop"
)
# Extract unique individual ID (first part after Aggregated_)
behaviour_summary <- behaviour_summary %>%
mutate(ID = str_extract(File, "(?<=Aggregated_)[^x]+"))
# Spread into wide format to enable paired test
behaviour_wide <- behaviour_summary %>%
select(ID, Group, Behaviour, TimeFrequency) %>%
pivot_wider(names_from = Group, values_from = TimeFrequency)
# Do paired Wilcoxon test per behaviour
wilcoxon_results <- behaviour_wide %>%
group_by(Behaviour) %>%
summarise(
p_value = if (sum(!is.na(unmated) & !is.na(mated)) >= 3) { # ensure enough data
wilcox.test(unmated, mated, paired = TRUE, exact = FALSE)$p.value
} else { NA },
.groups = "drop"
)
read_behavior_data <- function(file_name, group, path) {
read_csv(
file.path(path, paste0(file_name, ".csv")),
show_col_types = FALSE,
name_repair = "minimal"
) %>%
select(-1) %>%
mutate(
File = file_name,
Group = group,
Duration = as.numeric(Duration)
) %>%
filter(!is.na(Duration))
}
# Packages
library(dplyr)
library(readr)
library(purrr)
library(stringr)
files_g1 <- c(
"Aggregated_G26xJ203", "Aggregated_G30xJ210", "Aggregated_H30xH71",
"Aggregated_H45xH65", "Aggregated_H62xJ132", "Aggregated_J101xJ204",
"Aggregated_J102xJ206", "Aggregated_J110xH67", "Aggregated_J124xG42",
"Aggregated_J144xG39", "Aggregated_J183xH26", "Aggregated_J189xJ112",
"Aggregated_J190xJ42", "Aggregated_J191xJ68", "Aggregated_J201xG43"
)
files_g2 <- c(
"Aggregated_G30xH52", "Aggregated_H30xG38", "Aggregated_H62xG33",
"Aggregated_J101xH76", "Aggregated_J102xJ161", "Aggregated_J110xJ140",
"Aggregated_J124xG32", "Aggregated_J144xG38", "Aggregated_J183xG35",
"Aggregated_J190xJ212"
)
path_g1 <- "data_scoring/unmated"
path_g2 <- "data_scoring/mated"
data_g1 <- map_dfr(files_g1, read_behavior_data, group = "unmated", path = path_g1)
setwd("~/Documents/GitHub/dolomedes-courtship")
read_behavior_data <- function(file_name, group, path) {
read_csv(
file.path(path, paste0(file_name, ".csv")),
show_col_types = FALSE,
name_repair = "minimal"
) %>%
select(-1) %>%
mutate(
File = file_name,
Group = group,
Duration = as.numeric(Duration)
) %>%
filter(!is.na(Duration))
}
# Packages
library(dplyr)
library(readr)
library(purrr)
library(stringr)
files_g1 <- c(
"Aggregated_G26xJ203", "Aggregated_G30xJ210", "Aggregated_H30xH71",
"Aggregated_H45xH65", "Aggregated_H62xJ132", "Aggregated_J101xJ204",
"Aggregated_J102xJ206", "Aggregated_J110xH67", "Aggregated_J124xG42",
"Aggregated_J144xG39", "Aggregated_J183xH26", "Aggregated_J189xJ112",
"Aggregated_J190xJ42", "Aggregated_J191xJ68", "Aggregated_J201xG43"
)
files_g2 <- c(
"Aggregated_G30xH52", "Aggregated_H30xG38", "Aggregated_H62xG33",
"Aggregated_J101xH76", "Aggregated_J102xJ161", "Aggregated_J110xJ140",
"Aggregated_J124xG32", "Aggregated_J144xG38", "Aggregated_J183xG35",
"Aggregated_J190xJ212"
)
path_g1 <- "data_scoring/unmated"
path_g2 <- "data_scoring/mated"
data_g1 <- map_dfr(files_g1, read_behavior_data, group = "unmated", path = path_g1)
data_g2 <- map_dfr(files_g2, read_behavior_data, group = "mated", path = path_g2)
full_data <- bind_rows(data_g1, data_g2)
behaviour_summary <- full_data %>%
group_by(Group, File, Behaviour) %>%
summarise(TotalBehaviourTime = sum(Duration), .groups = "drop") %>%
left_join(
full_data %>%
group_by(Group, File) %>%
summarise(TotalTime = sum(Duration), .groups = "drop"),
by = c("Group", "File")
) %>%
mutate(TimeFrequency = TotalBehaviourTime / TotalTime)
behaviour_stats <- behaviour_summary %>%
group_by(Group, Behaviour) %>%
summarise(
MeanTimeFreq = mean(TimeFrequency),
SETimeFreq = sd(TimeFrequency) / sqrt(n()),
.groups = "drop"
)
# Extract unique individual ID (first part after Aggregated_)
behaviour_summary <- behaviour_summary %>%
mutate(ID = str_extract(File, "(?<=Aggregated_)[^x]+"))
# Spread into wide format to enable paired test
behaviour_wide <- behaviour_summary %>%
select(ID, Group, Behaviour, TimeFrequency) %>%
pivot_wider(names_from = Group, values_from = TimeFrequency)
# Do paired Wilcoxon test per behaviour
wilcoxon_results <- behaviour_wide %>%
group_by(Behaviour) %>%
summarise(
p_value = if (sum(!is.na(unmated) & !is.na(mated)) >= 3) { # ensure enough data
wilcox.test(unmated, mated, paired = TRUE, exact = FALSE)$p.value
} else { NA },
.groups = "drop"
)
final_results <- behaviour_stats %>%
pivot_wider(names_from = Group, values_from = c(MeanTimeFreq, SETimeFreq)) %>%
left_join(wilcoxon_results, by = "Behaviour")
View(final_results)
behaviour_counts <- full_data %>%
group_by(Group, Behaviour, File) %>%  # Group by file to count distinct trials
summarise(TotalTime = sum(Duration), .groups = "drop") %>%
group_by(Group, Behaviour) %>%
summarise(n_trials = n(), .groups = "drop")
View(behaviour_counts)
